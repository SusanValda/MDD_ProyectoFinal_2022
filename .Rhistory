#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
bd <- bd %>% rename(sabeLeer=ns01a_01,sexo=ns001a_02,edad=ns001a_03,nivel_ciclo=ns01a_02a,curso_grado=ns01a_02b,turno=ns01a_05c,asiste=ns01a_06,lug_trab=ns02b_15,afecta=ns02b_19_2a,deacuerdo=ns02b_20,pago=ns02c_26,lab_dom=ns03a_04,car_pes=ns03b_06,grupo=ncob_op,clasi=ncaeb_op,categ=catactlab,clasi=ncaeb_op,act_lab=catactlab_pd2)
bd <- nna %>% select(condac,depto,area,ns001a_02,ns001a_03,ns01a_01,ns01a_02a,ns01a_02b,ns01a_05c,
ns01a_06,ns02b_15,ns02b_19_2a,ns02b_20,ns02c_26,ns03a_04,ns03b_06,ncob_op,
ncaeb_op,catactlab,catactlab_pd2)
aux2<-c("ns01a_01","ns01a_06","ns02b_20","ns03a_04","ns03b_06")
bd <- nna %>% select(condac,depto,area,ns001a_02,ns001a_03,ns01a_01,ns01a_02a,ns01a_02b,ns01a_05c,
ns01a_06,ns02b_15,ns02b_19_2a,ns02b_20,ns02c_26,ns03a_04,ns03b_06,ncob_op,
ncaeb_op,catactlab,catactlab_pd2)
aux2<-c("ns01a_01","ns01a_06","ns02b_20","ns03a_04","ns03b_06")
for(i in aux2){
bd[[i]]<-factor(bd[[i]],c("1.Si","2.No"),c("SI","NO"))
}
bd <- bd %>% rename(sabeLeer=ns01a_01,sexo=ns001a_02,edad=ns001a_03,nivel_ciclo=ns01a_02a,curso_grado=ns01a_02b,turno=ns01a_05c,asiste=ns01a_06,lug_trab=ns02b_15,afecta=ns02b_19_2a,deacuerdo=ns02b_20,pago=ns02c_26,lab_dom=ns03a_04,car_pes=ns03b_06,grupo=ncob_op,clasi=ncaeb_op,categ=catactlab,clasi=ncaeb_op,act_lab=catactlab_pd2)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
d <- nna %>% select(condac,depto,area,ns001a_02,ns001a_03,ns01a_01,ns01a_02a,ns01a_02b,ns01a_05c,
bd <- nna %>% select(condac,depto,area,ns001a_02,ns001a_03,ns01a_01,ns01a_02a,ns01a_02b,ns01a_05c,
ns01a_06,ns02b_15,ns02b_19_2a,ns02b_20,ns02c_26,ns03a_04,ns03b_06,ncob_op,
ncaeb_op,catactlab,catactlab_pd2)
aux2<-c("ns01a_01","ns01a_06","ns02b_20","ns03a_04","ns03b_06")
bd[[i]]<-factor(bd[[i]],c("1.Si","2.No"),c("SI","NO"))
aux2<-c("ns01a_01","ns01a_06","ns02b_20","ns03a_04","ns03b_06")
for(i in aux2){
bd[[i]]<-factor(bd[[i]],c("1.Si","2.No"),c("SI","NO"))
}
View(bd)
bd <- nna %>% select(condac,depto,area,ns001a_02,ns001a_03,ns01a_01,ns01a_02a,ns01a_02b,ns01a_05c,
ns01a_06,ns02b_15,ns02b_19_2a,ns02b_20,ns02c_26,ns03a_04,ns03b_06,ncob_op,
ncaeb_op,catactlab,catactlab_pd2)
bd <- bd %>% rename(sabeLeer=ns01a_01,sexo=ns001a_02,edad=ns001a_03,nivel_ciclo=ns01a_02a,curso_grado=ns01a_02b,turno=ns01a_05c,asiste=ns01a_06,lug_trab=ns02b_15,afecta=ns02b_19_2a,deacuerdo=ns02b_20,pago=ns02c_26,lab_dom=ns03a_04,car_pes=ns03b_06,grupo=ncob_op,clasi=ncaeb_op,categ=catactlab,clasi=ncaeb_op,act_lab=catactlab_pd2)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
library(caret)
confusionMatrix(table(clase,testbd$condac))
confusionMatrix(table(clase,testbd$condac))
table(clase,testbd$condac)
confusionMatrix(table(clase,testbd$condac))
clase<-predict(mod1,testbd,type = "class")
table(clase,testbd$condac)
confusionMatrix(table(clase,testbd$condac))
bd <- nna %>% select(condac,depto,area,ns001a_02,ns001a_03,ns01a_01,ns01a_02a,ns01a_02b,
ns01a_03,ns01a_05c,ns01a_06,ns01a_07,ns02a_05,ns02a_07,
ns02b_19_2a,ns03a_04,ns04a_02)
bd <- bd %>% rename(sexo=ns001a_02,edad=ns001a_03,sabeLeerEscribir=ns01a_01,ultimoNivelCiclo=ns01a_02a,
ultimoCursoGrado=ns01a_02b,cursoAlternativo=ns01a_03,turno=ns01a_05c,asisteRegular=ns01a_06,
motivoInasistencia=ns01a_07,buscoTrabajo=ns02a_05,trabajoAntes=ns02a_07,afectoTrabajo=ns02b_19_2a,
tareasDomesticas=ns03a_04,cuentaConTiempoDescanso=ns04a_02)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
View(nna)
describe(nna$ns01a_02a)
describe(nna$ns01a_02a)
describe(nna$ns001a_02)
describe(nna$ns001a_03)
bd <- nna %>% select(condac,depto,area,ns001a_02,ns001a_03,ns01a_01,ns01a_02a,
ns01a_02b,ns01a_03,ns01a_05c,ns01a_06,ns03a_01a,ns03a_01b,ns03a_01c,ns03a_01d,ns03a_01e,ns03a_01f,
ns03a_01g,ns03a_01h,ns03a_03a,ns03a_04,ns03b_06,ns03a_04,ns04a_02)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
View(bd)
bd <- nna %>% select(condac,depto,area,ns001a_02,ns001a_03,ns01a_01,ns01a_02a,
ns01a_02b,ns01a_03,ns01a_05c,ns01a_06,ns01a_07,ns02a_05,ns02a_07,ns03a_01a,ns03a_01b,ns03a_01c,ns03a_01d,ns03a_01e,ns03a_01f,
ns03a_01g,ns03a_01h,ns03a_03a,ns03a_04,ns03b_06,ns03a_04,ns04a_02)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
bd <- nna %>% select(condac,depto,area,sexo=ns001a_02,
edad=ns001a_03,
sabeLeer=ns01a_01,
maxNivelAprobado=ns01a_02a,
maxCursoAprobado=ns01a_02b,
inscAlternativa=ns01a_03,
inscrito=ns01a_05c,
asistencia=ns01a_06,
tareasDomesticas=ns03a_04,
tiempoDescanso=ns04a_02,
Tarea1=ns03a_01a,
Tarea2=ns03a_01b,
Tarea3=ns03a_01c,
Tarea4=ns03a_01d,
Tarea5=ns03a_01e,
Tarea6=ns03a_01f,
Tarea7=ns03a_01g,
Tarea8=ns03a_01h,
usual=ns03a_03a)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
View(bd)
describe(bd$usual)
bd <- bd %>% na.omit(bd)
## Bases: trainbd, testbd
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
clase<-predict(mod1,testbd,type = "class")
clase2<-predict(mod2,testbd2,type = "class")
clase<-predict(mod1,testbd,type = "class")
table(clase,testbd$condac)
#install.packages('caret')
library(caret)
confusionMatrix(table(clase,testbd$condac))
bd <- nna %>% select(condac,depto,area,sexo=ns001a_02,edad=ns001a_03,sabeLeer=ns01a_01,
maxNivelAprobado=ns01a_02a,maxCursoAprobado=ns01a_02b,inscAlternativa=ns01a_03,inscrito=ns01a_05c,
asistencia=ns01a_06,tareasDomesticas=ns03a_04,tiempoDescanso=ns04a_02,Tarea1=ns03a_01a,Tarea2=ns03a_01b,
Tarea3=ns03a_01c,Tarea4=ns03a_01d,Tarea5=ns03a_01e,Tarea6=ns03a_01f,Tarea7=ns03a_01g,
Tarea8=ns03a_01h,usual=ns03a_03a)
## Elaboración del modelo
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
library(tidyverse)
#Omitir los datos vacíos o nulos.
bd <- bd %>% na.omit(bd)
## Elaboración del modelo
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
plot(mod1)
text(mod1,all=T,use.n=T)
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
## Elaboración del modelo
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
## Elaboración del modelo
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.8, 0.2))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
## Elaboración del modelo
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.5, 0.5))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
## Elaboración del modelo
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.8, 0.2))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
clase<-predict(mod1,testbd,type = "class")
table(clase,testbd$condac)
#install.packages('caret')
library(caret)
confusionMatrix(table(clase,testbd$condac))
## Elaboración del modelo
library(rpart)
set.seed(123)
index = sample(1:2, nrow(bd), replace = TRUE, prob=c(0.7, 0.3))
prop.table(table(index))
trainbd<-bd[index==1,]
testbd<-bd[index==2,]
mod1<-rpart(condac~.,data=trainbd)
#Explorar los nodos creados por rpart
mod1
#Examinar los parámetros del árbol con printcp
printcp(mod1)
#Usar el comando plotcp para explorar los parámetros de forma gráfica
plotcp(mod1)
#Usar la función summary para para examinar el modelo
summary(mod1)
#Visualizar el árbol
#install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
clase<-predict(mod1,testbd,type = "class")
table(clase,testbd$condac)
#install.packages('caret')
library(caret)
confusionMatrix(table(clase,testbd$condac))
